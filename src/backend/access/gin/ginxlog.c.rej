--- src/backend/access/gin/ginxlog.c
+++ src/backend/access/gin/ginxlog.c
@@ -117,9 +128,15 @@
 ginRedoCreatePTree(XLogRecPtr lsn, XLogRecord *record)
 {
 	ginxlogCreatePostingTree *data = (ginxlogCreatePostingTree *) XLogRecGetData(record);
-	ItemPointerData *items = (ItemPointerData *) (XLogRecGetData(record) + sizeof(ginxlogCreatePostingTree));
+	Pointer		ptr = XLogRecGetData(record) + sizeof(ginxlogCreatePostingTree), tmp;
 	Buffer		buffer;
 	Page		page;
+	FormData_pg_attribute attr;
+	GinState	ginstate;
+	ItemPointerData iptr = {{0, 0}, 0};
+	OffsetNumber i;
+
+	FILL_GINSTATE_ATTR;
 
 	/* Backup blocks are not used in create_ptree records */
 	Assert(!(record->xl_info & XLR_BKP_BLOCK_MASK));
@@ -129,11 +146,19 @@
 	page = (Page) BufferGetPage(buffer);
 
 	GinInitBuffer(buffer, GIN_DATA | GIN_LEAF);
-	memcpy(GinDataPageGetData(page), items, sizeof(ItemPointerData) * data->nitem);
+
+	tmp = ptr;
+	for (i = 1; i <= data->nitem; i++)
+		tmp = ginDataPageLeafRead(tmp, 1, &iptr, NULL, NULL, &ginstate);
+
+	memcpy(GinDataPageGetData(page), ptr, tmp - ptr);
+
 	GinPageGetOpaque(page)->maxoff = data->nitem;
 
 	PageSetLSN(page, lsn);
 
+	updateItemIndexes(page, 1, &ginstate);
+
 	MarkBufferDirty(buffer);
 	UnlockReleaseBuffer(buffer);
 }
@@ -193,14 +218,57 @@
 
 			if (data->isLeaf)
 			{
-				OffsetNumber i;
-				ItemPointerData *items = (ItemPointerData *) (XLogRecGetData(record) + sizeof(ginxlogInsert));
+				ItemPointer startIptr = (ItemPointer) (XLogRecGetData(record) + sizeof(ginxlogInsert));
+				OffsetNumber i, maxoff = GinPageGetOpaque(page)->maxoff, j;
+				Pointer dataPtr = (Pointer)(startIptr + 1);
+				FormData_pg_attribute attr;
+				GinState	ginstate;
+				ItemPointerData iptr = {{0, 0}, 0}, prev_iptr;
+				char pageCopy[BLCKSZ];
+				Pointer ptr, destPtr, dataFinish;
+				Datum addInfo = 0;
+				bool addInfoIsNull;
+
+				FILL_GINSTATE_ATTR;
 
 				Assert(GinPageIsLeaf(page));
 				Assert(data->updateBlkno == InvalidBlockNumber);
 
-				for (i = 0; i < data->nitem; i++)
-					GinDataPageAddItem(page, items + i, data->offset + i);
+				/*if (data->blkno == 7103)
+					dumpPage(page, "/home/smagen/projects/postgresql/waltest/page2.dat");*/
+
+				memcpy(pageCopy, page, BLCKSZ);
+				ptr = GinDataPageGetData(page);
+				for (i = 1; i < data->offset ; i++)
+				{
+					ptr = ginDataPageLeafRead(ptr, 1, &iptr, NULL, NULL, &ginstate);
+				}
+
+				ptr = GinDataPageGetData(pageCopy);
+				for (i = 1; i < data->offset ; i++)
+				{
+					ptr = ginDataPageLeafRead(ptr, 1, &iptr, NULL, NULL, &ginstate);
+				}
+
+				prev_iptr = iptr;
+				destPtr = page + (ptr - pageCopy);
+
+				dataFinish = dataPtr;
+				for (j = 0; j < data->nitem; j++)
+					dataFinish = ginDataPageLeafRead(dataFinish, 1, &prev_iptr, NULL, NULL, &ginstate);
+
+				memcpy(destPtr, dataPtr, dataFinish - dataPtr);
+				destPtr += dataFinish - dataPtr;
+
+				for (; i <= maxoff; i++)
+				{
+					ptr = ginDataPageLeafRead(ptr, 1, &iptr, &addInfo, &addInfoIsNull, &ginstate);
+					destPtr = ginPlaceToDataPageLeaf(destPtr, 1, &iptr, addInfo, addInfoIsNull, &prev_iptr, &ginstate);
+					prev_iptr = iptr;
+				}
+
+				GinPageGetOpaque(page)->maxoff = maxoff + data->nitem;
+				updateItemIndexes(page, 1, &ginstate);
 			}
 			else
 			{
@@ -266,6 +334,8 @@
 	Page		lpage,
 				rpage;
 	uint32		flags = 0;
+	FormData_pg_attribute attr;
+	GinState	ginstate;
 
 	if (data->isLeaf)
 		flags |= GIN_LEAF;
@@ -295,27 +365,67 @@
 		OffsetNumber i;
 		ItemPointer bound;
 
-		for (i = 0; i < data->separator; i++)
+		if (data->isLeaf)
 		{
-			GinDataPageAddItem(lpage, ptr, InvalidOffsetNumber);
-			ptr += sizeofitem;
-		}
+			Pointer tmp, ptr2;
+			ItemPointerData iptr = {{0, 0}, 0};
+			Size lsize, rsize;
 
-		for (i = data->separator; i < data->nitem; i++)
-		{
-			GinDataPageAddItem(rpage, ptr, InvalidOffsetNumber);
-			ptr += sizeofitem;
-		}
+			FILL_GINSTATE_ATTR;
 
-		/* set up right key */
-		bound = GinDataPageGetRightBound(lpage);
-		if (data->isLeaf)
-			*bound = *(ItemPointerData *) GinDataPageGetItem(lpage, GinPageGetOpaque(lpage)->maxoff);
+			tmp = ptr;
+			for (i = 1; i <= data->separator; i++)
+			{
+				tmp = ginDataPageLeafRead(tmp, 1, &iptr, NULL, NULL, &ginstate);
+			}
+			lsize = tmp - ptr;
+			ptr2 = ptr + MAXALIGN(lsize);
+			tmp = ptr2;
+			for (; i <= data->nitem; i++)
+			{
+				tmp = ginDataPageLeafRead(tmp, 1, &iptr, NULL, NULL, &ginstate);
+			}
+			rsize = tmp - ptr2;
+
+			Assert(lsize < GinDataPageSize);
+			Assert(rsize < GinDataPageSize);
+
+			memcpy(GinDataPageGetData(lpage), ptr, lsize);
+			memcpy(GinDataPageGetData(rpage), ptr2, rsize);
+
+			GinPageGetOpaque(lpage)->maxoff = data->separator;
+			GinPageGetOpaque(rpage)->maxoff = data->nitem - data->separator;
+			*GinDataPageGetRightBound(lpage) = updateItemIndexes(lpage, 1, &ginstate);
+			updateItemIndexes(rpage, 1, &ginstate);
+
+			*GinDataPageGetRightBound(rpage) = data->rightbound;
+
+			Assert(GinPageGetOpaque(lpage)->flags == flags);
+			Assert(GinPageGetOpaque(rpage)->flags == flags);
+		}
 		else
-			*bound = ((PostingItem *) GinDataPageGetItem(lpage, GinPageGetOpaque(lpage)->maxoff))->key;
+		{
+			for (i = 0; i < data->separator; i++)
+			{
+				GinDataPageAddItem(lpage, ptr, InvalidOffsetNumber);
+				ptr += sizeofitem;
+			}
+
+			for (i = data->separator; i < data->nitem; i++)
+			{
+				GinDataPageAddItem(rpage, ptr, InvalidOffsetNumber);
+				ptr += sizeofitem;
+			}
+			/* set up right key */
+			bound = GinDataPageGetRightBound(lpage);
+			if (data->isLeaf)
+				*bound = *(ItemPointerData *) GinDataPageGetItem(lpage, GinPageGetOpaque(lpage)->maxoff);
+			else
+				*bound = ((PostingItem *) GinDataPageGetItem(lpage, GinPageGetOpaque(lpage)->maxoff))->key;
 
-		bound = GinDataPageGetRightBound(rpage);
-		*bound = data->rightbound;
+			bound = GinDataPageGetRightBound(rpage);
+			*bound = data->rightbound;
+		}
 	}
 	else
 	{
@@ -404,10 +517,33 @@
 	{
 		if (GinPageIsData(page))
 		{
-			memcpy(GinDataPageGetData(page),
-				   XLogRecGetData(record) + sizeof(ginxlogVacuumPage),
-				   data->nitem * GinSizeOfDataPageItem(page));
-			GinPageGetOpaque(page)->maxoff = data->nitem;
+			if (GinPageIsLeaf(page))
+			{
+				FormData_pg_attribute attr;
+				GinState	ginstate;
+				ItemPointerData iptr = {{0, 0}, 0};
+				Pointer ptr, tmp;
+				OffsetNumber i;
+
+				FILL_GINSTATE_ATTR;
+
+				ptr = XLogRecGetData(record) + sizeof(ginxlogVacuumPage);
+				tmp = ptr;
+				for (i = 1; i <= data->nitem; i++)
+					tmp = ginDataPageLeafRead(tmp, 1, &iptr, NULL, NULL, &ginstate);
+
+				memcpy(GinDataPageGetData(page), ptr, tmp - ptr);
+
+				GinPageGetOpaque(page)->maxoff = data->nitem;
+				updateItemIndexes(page, 1, &ginstate);
+			}
+			else
+			{
+				memcpy(GinDataPageGetData(page),
+					   XLogRecGetData(record) + sizeof(ginxlogVacuumPage),
+					   data->nitem * GinSizeOfDataPageItem(page));
+				GinPageGetOpaque(page)->maxoff = data->nitem;
+			}
 		}
 		else
 		{
@@ -817,15 +953,10 @@
 	{
 		Page		page = BufferGetPage(buffer);
 
-		ginPrepareDataScan(&btree, reln);
+		ginPrepareDataScan(&btree, reln, InvalidOffsetNumber, &ginstate);
 
 		PostingItemSetBlockNumber(&(btree.pitem), split->leftBlkno);
-		if (GinPageIsLeaf(page))
-			btree.pitem.key = *(ItemPointerData *) GinDataPageGetItem(page,
-											 GinPageGetOpaque(page)->maxoff);
-		else
-			btree.pitem.key = ((PostingItem *) GinDataPageGetItem(page,
-									   GinPageGetOpaque(page)->maxoff))->key;
+		btree.pitem.key = *GinDataPageGetRightBound(page);
 	}
 
 	btree.rightblkno = split->rightBlkno;
